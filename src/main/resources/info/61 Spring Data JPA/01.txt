61 Spring Data JPA

(работаем на основе проекта spring_hibernate,
переносим все данные оттуда)

Spring Data JPA использует под капотом ORM (Hibernate)
Это самый высокий уровень абстракции БД
(см DB_technology.png)

Все методы CRUD и много других генерируются автоматически

---

DAO и Repository (DAO&Repository.png)
- Похожие понятия
- Репозиторий обычно более высокоуровневый, ближе к бизнес-логике
(не пишем SQL запросы, работаем с сущностями)
- DAO обычно более высокоуровневый, ближе к БД
(можем писать SQL запросы)
- в сложных приложениях обычно есть и то, и другое


---

Сервисный слой (service_layer.png)

Слои:
- Контроллер (мы хотим иметь минимум кода)
- Сервисный слой (бизнес-логика)
- Слой работы с БД (DAO или Репозиторий)

---
для Spring Data добавляем в pom
https://mvnrepository.com/
поиск: spring data jpa
<artifactId>spring-data-jpa</artifactId>

После этого обновляем версии Спринга,
чтобы и там и там были последние версии
Было <spring.version>5.2.1.RELEASE</spring.version>
Стало <spring.version>5.3.5</spring.version>

Дабы подстраховаться
Во вкладке Maven
Maven clean и нажать кнопку Run

---
Меняем SpringConfig под Spring Data JPA
Все каменты там

---
Создаем репозиторий
Создаем репозитории в виде интерфейса в папке
project/repositories Названия репозиториев
как и контроллеры обрабатывают сущности,
поэтому называется PeopleRepository.
Наследуется от JpaRepository
Имеет соотв. аннотацию

extends JpaRepository<Person, Integer>
В наследовании мы указываем модель (сущность) которую
будет обрабатывать репозиторий и тип ID (в данном случае int)

---

Создаем сервис
В папке services создаем новый сервис PeopleService
Помечаем аннотацией @Service. Здесь должна лежать вся
бизнес логика Также этот класс берет на себя работу с транзакциями
@Transactional (readOnly = true)

Если над классом стоит такая транзакция, то все методы
её выполняют. Если над методом стоит аннотация @Transactional
(без readonly)  то можно ещё и записывать. Местная аннотация
важнее общеклассовой.

Внедряем репозиторий и пользуемся его методами.
Хорошо тем, что в репо мы не одной сущности не реализовали
а методами его пользуемся в сервисе

---

После того как мы сдедали репозиторий
и сервис, м ы може в контроллере
поменять ссылку с DAO на Service
После этого папку DAO мы можем удалить