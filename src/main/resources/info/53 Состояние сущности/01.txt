53 Жизненный цикл сущности
Hibernate Entity lifecycle

теоретический урок

Java объекты-сущности проходят через несколько состояний,
когда мы используем Hibernate

1) Transient (переходный, временный)

Person person = new Person(....)
//пока не сохранили

Объект пока никак не связан с Hibernate и не отслеживается (не
находится в так называемом Persistent context
Вызов сеттеров на объекте никаке не будет влиять на состояние
БД Можно воспринимать объект, находящийся в Transient состоянии
как обычный объект


-----------


2) Persistent(Manged) - (постоянный, стойкий)

Person person = new Person(....)
session.save(person)

Как только мы вызываем метод save() и сделаем commit состояние объекта
переходит на Persistent

Еще один случай, когда Java объект является Persistent - когда мы получаем его
из БД с помощью Hibernate

Объект находится в Persistent context и отслеживается Hibernate
Объект находится в этом состоянии до тех пор, пока работает Hibernate сессия
Вызов сеттеров на Persistent объектах генерирует SQL код


------------------------------

3) Detached (отдельный, обособленный, оторванный, независимый)

При вызове специальной команды
session.detach(person)
объект перестает быть Persistence и покидает Persistent context - становится
опять обычным объектом, который Hibernate не отслеживает
похоже на Transient состояние
Можно присоединить объект обратно к  Persistent context, если вызвать
метод merge()

-----------------------------

4) Removed

Person person = new Person(....)
session.remove (person)
Объект помечкн для удаления и следующий коммит удалит соотвестствующую
строку из таблицы
